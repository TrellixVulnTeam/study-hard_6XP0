<form name='form-container' method="POST" class="mt-4" action = "/courses/handle-form-trash-action">
  <h1 >Thùng rác</h1>
  <a href="/me/stored/courses">Danh sách khóa học</a> có {{count}} khóa
  <div class = "d-flex align-items-center">
  <div class="form-check">
    <input class="form-check-input" type="checkbox" value="" id="checkbox-all">
    <label class="form-check-label" for="checkbox-all">
      Chọn tất cả 
    </label>
  </div>
  <select name='action' class=" form-control-sm checkbox-select-all-options" aria-label="Default select example" required>
    <option hidden value=""> --Chọn hành động-- </option>
    <option value="reverse">Khôi phục</option>
    <option value="deleteAll">Xóa Vĩnh Viễn</option>
  </select><br>
  <button class="btn btn-primary btn-sm btn-check-all-submit" disabled> Thực hiện </button><br>
  </div>
  <table class="table">
    <thead>
      <tr>
        <th scope="col" colspan="2">#</th>
        <th scope="col">
        Name
        {{{ sortable 'name' _sort}}}
        </th>
        <th scope="col">
        Descripton
        {{{ sortable 'descripton' _sort}}}
        </th>
        <th scope="col">Descripton</th>
        <th scope="col" colspan="2">Khôi phục / Xóa</th>
      </tr>
    </thead>
    <tbody>
      {{#each courses}}
      <tr>
        <td>
        <div class="form-check">
        <input class="form-check-input" type="checkbox" value="{{this._id}}" name="courseIds[]" >
         </td>
        <th scope="row">{{sum @index 1}}</th>
        <td>{{this.name}}</td>
        <td>{{this.descripton}}</td>
        <td>
          <a id="getID" onclick="restoreFunction('{{this._id}}')" class =" btn btn-link">Khôi phục</a>
          <a  class =" btn btn-link" data-bs-toggle="modal" data-bs-id="{{this._id}}" data-bs-name="{{this.name}}" data-bs-target="#staticBackdrop">Xóa</a>
        </td>
      </tr>
      {{else}}
      <tr>
          <td colspan = '5' class = 'text-center'>
              Thùng rác trống !
              <a href="/me/stored/courses" >Danh sách khóa học</a>
          </td>
      </tr>
      {{/each}}
    </tbody>
  </table>
</form>

{{!-- Confrim delete courese --}}

<div class="modal" tabindex="-1" id="staticBackdrop" >
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Xóa khóa học Huh ?</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" value="2"></button>
      </div>
      <div class="modal-body">
        <p>Xóa {{this.name}}</p>
      </div>
      <div class="modal-footer">
        <button type="button" onclick="deleteFunction()" class="btn btn-danger" >Xóa bỏ</button>
        <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Hủy</button>
      </div>
    </div>
  </div>
</div>

{{!-- Confrim delete courese --}}

<form method="POST" action="" name="delete-course-form"></form>
<form method="POST" action="" name="restore-course-form"></form>

<script>
  var idDelete
  var formDelete = document.forms['delete-course-form'];
  var formResotre = document.forms['restore-course-form'];
  const exampleModal = document.getElementById('staticBackdrop');
  var courseItemCheckedBox = $('input[name="courseIds[]"]');
  var checkBoxCheckAll = $('.btn-check-all-submit');
  var checkboxAll = $('#checkbox-all');
  var formContainer = document.forms['form-container'];


  exampleModal.addEventListener('show.bs.modal', event => {
    // Button that triggered the modal
     const button = event.relatedTarget
  // Extract info from data-bs-* attributes
    idDelete = button.getAttribute('data-bs-id');
    const name = button.getAttribute('data-bs-name');

// Update modal
    const modalBodyInput = exampleModal.querySelector('.modal-body p')
    modalBodyInput.innerText = "Xóa "+name;
  })

  const restoreFunction = (idRestore) =>{
        formResotre.action = '/courses/restore/'+idRestore+'?_method=PATCH';
        formResotre.submit();
  }


  const  deleteFunction = () =>{
        formDelete.action = '/courses/'+idDelete+'?_method=DELETE';
        formDelete.submit();
  }

  checkboxAll.change(function() {
      var isChecked = $(this).prop('checked');
      courseItemCheckedBox.prop('checked',isChecked);
      renderCheckAllSubmit()


      {{!-- if(isChecked){
        courseItemCheckedBox.prop('checked',true);
      }else{
        courseItemCheckedBox.prop('checked',false);
      } --}}
  })

  courseItemCheckedBox.change(function () {
    var isCheckedAll = courseItemCheckedBox.length === $('input[name="courseIds[]"]:checked').length;
    checkboxAll.prop('checked',isCheckedAll);
    renderCheckAllSubmit()
  })

{{!-- 
  formContainer.on('submit', function(e){
    var isSubmitable = !checkBoxCheckAll.hasClass('disabled');
      if(!isSubmitable){
        e.preventDefault();
      }
  }) --}}


  function renderCheckAllSubmit(){
    var checkboxCount = $('input[name="courseIds[]"]:checked').length;

    if(checkboxCount > 0){
      checkBoxCheckAll.attr('disabled',false);
    }else{
      checkBoxCheckAll.attr('disabled',true);
    }

  }
</script>